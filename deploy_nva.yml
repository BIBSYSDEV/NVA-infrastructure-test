AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: v1.0 Complete deployment of NVA

Parameters:

  DomainCertificateArn:
    Type: String
    Description: ARN  of certificate to assign to the assosiated Domain
    Default: arn:aws:acm:us-east-1:812481234721:certificate/9319e9f9-3a66-43bb-9f9c-7fc1e6b4d3ab   # Test
#    Default: arn:aws:acm:us-east-1:750639270376:certificate/72355178-f20b-45c9-b036-5a9196f9da9d   # Dev/sandbox

  ApplicationDomain:
    Type: String
    Description: |
      Base part of the domain the stack and components will be deployed to. Must be covered by the certificate.
      Could be somethoing like .test.aws.unit.no or np-733.test.aws.no.
      Used to calculate the other addresses in the deployment
    Default: frontend.test.nva.aws.unit.no

  BareApiKey:
    Type: String
    Description: Key to access bare
    NoEcho: true
    Default: '{{resolve:secretsmanager:bareApiKey:SecretString}}'
  BareHost:
    Type: String
    Description: Address to bare
    Default: alfa-a.bibsys.no
  AlmaSruHost:
    Type: String
    Description: Address to Alma-SRU
    Default: bibsys.alma.exlibrisgroup.com/view/sru/47BIBSYS_NETWORK
  OrcidBaseUrl:
    Type: String
    Description: Address to ORCID services
    Default: https://sandbox.orcid.org
  OrcidClientID:
    Type: String
    Description: Clientid for ORCID
    Default: APP-QHBJSU99SZV1LMQJ
  OrcidClientSecret:
    Type: String
    Description: Secret to authenticate for ORCID
    NoEcho: true
    Default: '{{resolve:secretsmanager:REACT_APP_ORCID_CLIENT_SECRET:SecretString}}'
  AlmaApiUrl:
    Type: String
    Description: URL to ALMA Library services
    Default: https://bibsys.alma.exlibrisgroup.com/view/sru/47BIBSYS_NETWORK



Resources:


  # ===============================
  #  DynamoDB
  # ===============================

  # ===============================
  #  S3 Storage
  # ===============================


  NVAStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
#      BucketName: nva-storage-sandbox  # Not required
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, PUT, POST, HEAD]
            AllowedOrigins: ['*']
            ExposedHeaders: [ETag]
      LifecycleConfiguration:
        Rules:
          - Id: RemoveFailedUploads
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      VersioningConfiguration:
        Status: Enabled


  NVAStorageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref NVAStorageBucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:AbortMultipartUpload"
              - "s3:ListMultipartUploadParts"
              - "s3:ListBucketMultipartUploads"
            Effect: "Allow"
            Resource:
              - !Sub 'arn:aws:s3:::${NVAStorageBucket}'
              - !Sub 'arn:aws:s3:::${NVAStorageBucket}/*'
            Principal:
              Service:
                - lambda.amazonaws.com

  # ===============================
  #  Frontend
  # ===============================

  NVAFrontend:
    Type: AWS::Serverless::Application
    Description: NVA Frontend
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/NVA-Frontend
        SemanticVersion: 1.1.2
      Parameters:
        AlmaApiUrl: !Ref AlmaApiUrl
        AmazonCognitoDomain: !ImportValue CognitoLoginUrl
        FrontendDomain: !Ref ApplicationDomain
        BackendDomain: !ImportValue BackendCustomDomain
        DomainCertificateArn: !Ref DomainCertificateArn
        CognitoIdentityPoolId: ImportValue !Ref IdentityPool
        UserPoolId: !ImportValue CognitoUserPoolId
        UserPoolAppClientId: !ImportValue CognitoUserPoolAppClientId
        RedirectSignInUrl: !Ref ApplicationDomain
        RedirectSignOutUrl: !Sub '${ApplicationDomain}/logout'
        OrcidBaseUrl: !Ref OrcidBaseUrl
        OrcidClientID: !Ref OrcidClientID
        OrcidClientSecret: !Ref OrcidClientSecret
        OrcidRedirectUri: !Ref ApplicationDomain

  # ===============================
  #  API / Backend
  # ===============================

  SruLastPublication:  # nva-alma-proxy
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/SruLastPublication
        SemanticVersion: 0.1.0
      Parameters:
        CognitoAuthorizerArn: !ImportValue CognitoAuthorizerArn
        CustomDomain: !ImportValue BackendCustomDomain
        CustomDomainBasePath: alma
        AlmaSruHost: !Ref AlmaSruHost

  NvaDoiTransformer: # nva-doi-transformer
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/NvaDoiTransformer
        SemanticVersion: 0.1.1
      Parameters:
        CognitoAuthorizerArn: !ImportValue CognitoAuthorizerArn
        CustomDomain: !ImportValue BackendCustomDomain
        CustomDomainBasePath: doi-transform

  ResourceApi: # nva-resource-api
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/ResourceApi
        SemanticVersion: 0.1.0
      Parameters:
        CognitoAuthorizerArn: !ImportValue CognitoAuthorizerArn
        CustomDomain: !ImportValue BackendCustomDomain
        CustomDomainBasePath: resource
        # Reference to table containing resource data - refer to template?
        ResourceTable: nva_resources

  UploadMultipart: # nva-upload-multipart
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/UploadMultipart
        SemanticVersion: 0.1.0
      Parameters:
        CognitoAuthorizerArn: !ImportValue CognitoAuthorizerArn
        CustomDomain: !ImportValue BackendCustomDomain
        CustomDomainBasePath: upload
        S3UploadBucket: !Ref NVAStorageBucket #  nva-storage-test # S3 Bucket to upload files to  - refer to template?

  PersonData: # nva-bare-proxy
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/PersonData
        SemanticVersion: 0.1.0
      Parameters:
        CognitoAuthorizerArn: !ImportValue CognitoAuthorizerArn
        CustomDomain: !ImportValue BackendCustomDomain
        CustomDomainBasePath: person
        BareApiKey: !Ref BareApiKey
        BareHost: !Ref BareHost

  NvaPublicationApi:  # nva-publication-api
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/NvaPublicationApi
        SemanticVersion: 0.1.0
      Parameters:
        CognitoAuthorizerArn: !ImportValue CognitoAuthorizerArn
        CustomDomain: !ImportValue BackendCustomDomain
        CustomDomainBasePath: publication
        PublicationsTableName: 'nva_resources'
        PublicationsByOwnerIndexName: 'ByPublisher'

  PublicationChannelRegister: # nva-channel-registry
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/PublicationChannelRegister
        SemanticVersion: 0.1.0
      Parameters:
        CognitoAuthorizerArn: !ImportValue CognitoAuthorizerArn
        CustomDomain: !ImportValue BackendCustomDomain
        CustomDomainBasePath: publication-channel

  nvafetchdoi: # nva-fetch-doi
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/nva-fetch-doi
        SemanticVersion: 0.1.0
      Parameters:
        CognitoAuthorizerArn: !ImportValue CognitoAuthorizerArn
        CustomDomain: !ImportValue BackendCustomDomain
        CustomDomainBasePath: doi-fetch

  Projects: # nva-cristin-projects
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/Projects
        SemanticVersion: 0.1.0
      Parameters:
        CognitoAuthorizerArn: !ImportValue CognitoAuthorizerArn
        CustomDomain: !ImportValue BackendCustomDomain
        CustomDomainBasePath: project

  NVADOIProxy: # nva-doi-lambda
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:884807050265:applications/DoiProxy
        SemanticVersion: 0.1.0
      Parameters:
        CognitoAuthorizerArn: !ImportValue CognitoAuthorizerArn
        CustomDomain: !ImportValue BackendCustomDomain
        CustomDomainBasePath: doi

